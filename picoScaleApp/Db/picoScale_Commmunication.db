record(stringout, "$(C):$(P):IP"){
	field(DESC, "Device IP address for connecting")
	field(VAL, "$(ADDR)")
	field(PINI, "YES")
	field(OUT, "@asyn ($(PORT), $(ADDR))IP_STRINGOUT_VAL")
	field(FLNK, "$(C):$(P):OPEN")
}

record(sub, "$(C):$(P):OPEN"){
	field(DESC, "Establishes connection with PicoScale")
	field(PINI, "YES")
	field(INPA, "$(C):$(P):IP.VAL")
	field(SNAM, "picoScale_open")
}

record(sub, "$(C):$(P):CLOSE"){
	field(DESC, "Terminates connection with PicoScale")
	field(SNAM, "picoScale_close")
}


record(longout, "$(C):$(P):FRAMERATE"){
	field(DESC, "PicoScale current operation framerate")
	field(VAL, "1")	
	field(EGU, "Hz")
	field(HOPR, "10000000")
	field(LOPR, "1")
	field(PINI, "YES")
	field(FLNK, "$(C):$(P):SET_FRAMERATE")
}

record(sub, "$(C):$(P):SET_FRAMERATE"){
	field(INPA, "$(C):$(P):FRAMERATE.VAL")
	field(SNAM, "picoScale_setFramerate")
}

record(longout, "$(C):$(P):BUFFERS"){
	field(DESC, "Number of stream buffers")
	field(VAL, "2")
	field(PINI, "YES")
	field(LOPR, "2")
	field(HOPR, "256")
	field(OUT, "@asyn ($(PORT), $(ADDR))BUFFERSNUM_LONGOUT_VAL")
}

record(mbbo, "$(C):$(P):BUFFERAGGR"){
	field(DESC, "Stream buffer aggregation")
	field(VAL, "0")
	field(ZRVL, "0")
	field(ONVL, "32")
	field(TWVL, "64")
	field(THVL, "128")
	field(FRVL, "256")
	field(FVVL, "512")
	field(SXVL, "1024")
	field(PINI, "YES")
	field(OUT, "@asyn ($(PORT), $(ADDR))BUFFERAGGR_MBBO_VAL")
}

record(bo, "$(C):$(P):INTERLEAVING"){
	field(DESC, "Interleaved mode")
	field(VAL, "1")
	field(ZNAM, "Disabled")
	field(ONAM, "Enabled")
	field(PINI, "YES")
	field(OUT, "@asyn ($(PORT), $(ADDR))INTERLEAVING_BO_VAL")
}

record(genSub, "$(C):$(P):STREAM"){
	field(DESC, "Data streaming of specified data source")
	field(INPA, "$(C):$(P):CHANNELINDX")
	field(FTA,  "LONG")
	field(INPB, "$(C):$(P):DATASRCINDX")
	field(FTB,  "LONG")
	field(INPC, "$(C):$(P):FRAMERATE")
	field(FTC, "LONG")
	field(SNAM, "picoScale_stream")
	field(OUTA, "$(C):$(P):STREAMDATA.VAL")
}

record(waveform, "$(C):$(P):STREAMDATA"){
	field(DESC, "Received stream data")
	field(NELM, "10000000")
	field(FTVL, "DOUBLE")
}

#Streaming of specific position/velocity/acceleration datasources (frequency up to 10MHz)
record(genSub, "$(C):$(P):STREAM_PVA"){
	field(DESC, "Data stream of Position/Velocity/Acceleration data sources from all channels")
	field(INPA, "$(C):$(P):FRAMERATE")
	field(SNAM, "picoScale_streamPVA")
	field(OUTA, "$(C):$(P):POS_0")
	field(FTVA, DOUBLE)
	field(NOVA, 10000000)
	field(OUTB, "$(C):$(P):VEL_0")
	field(FTVB, DOUBLE)
	field(NOVB, 10000000)
	field(OUTC, "$(C):$(P):ACC_0")
	field(FTVC, DOUBLE)
	field(NOVC, 10000000)
	field(OUTD, "$(C):$(P):POS_1")
	field(FTVD, DOUBLE)
	field(NOVD, 10000000)
	field(OUTE, "$(C):$(P):VEL_1")
	field(FTVE, DOUBLE)
	field(NOVE, 10000000)
	field(OUTF, "$(C):$(P):ACC_1")
	field(FTVF, DOUBLE)
	field(NOVF, 10000000)
	field(OUTG, "$(C):$(P):POS_2")
	field(FTVG, DOUBLE)
	field(NOVG, 10000000)
	field(OUTH, "$(C):$(P):VEL_2")
	field(FTVH, DOUBLE)
	field(NOVH, 10000000)
	field(OUTI, "$(C):$(P):ACC_2")
	field(FTVI, DOUBLE)
	field(NOVI, 10000000)
}

record(sub, "$(C):$(P):POLL"){
	field(DESC, "Polling of specified data source")
	field(INPA, "$(C):$(P):CHANNELINDX_$(Ch)")
	field(INPB, "$(C):$(P):DATASRCINDX_$(Ch)")
	field(SNAM, "picoScale_poll")
}

record(mbbo, "$(C):$(P):CHANNELINDX"){
	field(DESC, "Channel index")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(TWVL, "2")
	field(ZRST, "Channel 0")
	field(ONST, "Channel 1")
	field(TWVL, "Channel 2")
	field(OUT, "@asyn ($(PORT), $(ADDR))CHANNELINDX_MBBO_VAL")
}

record(mbbo, "$(C):$(P):DATASRCINDX"){
	field(DESC, "Data source index")
	field(ZRVL, 0)
	field(ONVL, 1)
	field(TWVL, 2)
	field(THVL, 3)
	field(FRVL, 4)
	field(FVVL, 5)
	field(SXVL, 6)
	field(SVVL, 7)
	field(EIVL, 8)
	field(ZRST, "Position")
	field(ONST, "Velocity")
	field(TWST, "Acceleration")
	field(THST, "Swraw")
	field(FRST, "S2wraw")
	field(FVST, "Sw")
	field(SXST, "S2w")
	field(SVST, "SwQuality")
	field(EIST, "S2wQuality")
	field(OUT, "@asyn ($(PORT), $(ADDR))DATASRCINDX_MBBO_VAL")
}


